version: "3.0"
services:
    composer:
        build: 'docker/composer'
    mysql:
        image: mariadb:10.6
        ports:
            - ${DB_PORT}:3306
        environment:
            MYSQL_ROOT_PASSWORD: boXvi9kri1ELNSEoYMg0cxUA6h4aAm6Q
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_PASSWORD: ${DB_PASSWORD}
        volumes:
            - ./docker/db:/var/lib/mysql
        healthcheck:
            test: "/usr/bin/mysql --user=${DB_USERNAME} --password=${DB_PASSWORD} --port=${DB_PORT} --execute \"SHOW DATABASES;\""
            interval: 3s
            timeout: 1s
            retries: 5

    redis:
        env_file: .env
        image: redis:7-alpine
        command: redis-server --requirepass ${REDIS_PASSWORD}
        ports:
            - ${REDIS_PORT}:6379
        healthcheck:
            test: [ "CMD", "redis-cli", "ping" ]

    php-fpm:
        env_file: .env
        build: './docker/php/prod/'
        volumes: &php-volumes
            - .:/app
            - ./docker/msmtp/msmtprc:/etc/msmtprc

    php-xdebug:
        env_file: .env
        build: './docker/php/dev/'
        extra_hosts:
          - host.docker.internal:host-gateway
        volumes:
            *php-volumes

    nginx:
        env_file: .env
        image: nginx:stable-alpine
        ports:
            - ${NGINX_PORT}:80
        volumes:
            - .:/app
            - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
            - ./docker/nginx/log:/var/log/nginx
      # for devs who prefer mailhog
    mailhog:
       image: mailhog/mailhog
       logging:
         driver: 'none'  # disable saving logs
       restart: always
       ports:
          - 1025:1025 # smtp server
          - 8025:8025 # web ui

volumes:
  db_data:


